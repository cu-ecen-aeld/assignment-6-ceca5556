From 99287af707079eee878a124996eb391007fd4c5c Mon Sep 17 00:00:00 2001
From: ceca5556 <ceca5556@colorado.edu>
Date: Sat, 19 Oct 2024 15:25:33 -0600
Subject: [PATCH] added include files to scull directory directly

---
 scull/access_ok_version.h | 15 +++++++++++++++
 scull/proc_ops_version.h  | 34 ++++++++++++++++++++++++++++++++++
 scull/scull_load          |  3 +--
 3 files changed, 50 insertions(+), 2 deletions(-)
 create mode 100644 scull/access_ok_version.h
 create mode 100644 scull/proc_ops_version.h

diff --git a/scull/access_ok_version.h b/scull/access_ok_version.h
new file mode 100644
index 0000000..354f240
--- /dev/null
+++ b/scull/access_ok_version.h
@@ -0,0 +1,15 @@
+/*
+ * @file access_ok_version.h
+ * @date 10/13/2019
+ *
+ */
+
+#include <linux/version.h>
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5,0,0)
+#define access_ok_wrapper(type,arg,cmd) \
+	access_ok(type, arg, cmd)
+#else
+#define access_ok_wrapper(type,arg,cmd) \
+	access_ok(arg, cmd)
+#endif
diff --git a/scull/proc_ops_version.h b/scull/proc_ops_version.h
new file mode 100644
index 0000000..c700111
--- /dev/null
+++ b/scull/proc_ops_version.h
@@ -0,0 +1,34 @@
+#ifndef _PROC_OPS_VERSION_H
+#define _PROC_OPS_VERSION_H
+
+#include <linux/version.h>
+
+#ifdef CONFIG_COMPAT
+#define __add_proc_ops_compat_ioctl(pops, fops)					\
+	(pops)->proc_compat_ioctl = (fops)->compat_ioctl
+#else
+#define __add_proc_ops_compat_ioctl(pops, fops)
+#endif
+
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 6, 0)
+#define proc_ops_wrapper(fops, newname)	(fops)
+#else
+#define proc_ops_wrapper(fops, newname)						\
+({										\
+ 	static struct proc_ops newname;						\
+										\
+	newname.proc_open = (fops)->open;					\
+	newname.proc_read = (fops)->read;					\
+	newname.proc_write = (fops)->write;					\
+	newname.proc_release = (fops)->release;					\
+	newname.proc_poll = (fops)->poll;					\
+	newname.proc_ioctl = (fops)->unlocked_ioctl;				\
+	newname.proc_mmap = (fops)->mmap;					\
+	newname.proc_get_unmapped_area = (fops)->get_unmapped_area;		\
+	newname.proc_lseek = (fops)->llseek;					\
+	__add_proc_ops_compat_ioctl(&newname, fops);				\
+	&newname;								\
+})
+#endif
+
+#endif
diff --git a/scull/scull_load b/scull/scull_load
index 71fdf7f..424e9ad 100755
--- a/scull/scull_load
+++ b/scull/scull_load
@@ -14,8 +14,7 @@ fi
 # invoke insmod with all arguments we got
 # and use a pathname, as insmod doesn't look in . by default
 echo "$0"
-# insmod /lib/modules/$(uname -r)/extra/$module.ko $* || exit 1
-modprobe $module.ko $* || exit 1
+insmod /lib/modules/$(uname -r)/extra/$module.ko $* || exit 1
 
 # retrieve major number
 major=$(awk "\$2==\"$module\" {print \$1}" /proc/devices)
